/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Visa as PrismaVisa } from "@prisma/client";

export class VisaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.VisaCountArgs, "select">): Promise<number> {
    return this.prisma.visa.count(args);
  }

  async visas(args: Prisma.VisaFindManyArgs): Promise<PrismaVisa[]> {
    return this.prisma.visa.findMany(args);
  }
  async visa(args: Prisma.VisaFindUniqueArgs): Promise<PrismaVisa | null> {
    return this.prisma.visa.findUnique(args);
  }
  async createVisa(args: Prisma.VisaCreateArgs): Promise<PrismaVisa> {
    return this.prisma.visa.create(args);
  }
  async updateVisa(args: Prisma.VisaUpdateArgs): Promise<PrismaVisa> {
    return this.prisma.visa.update(args);
  }
  async deleteVisa(args: Prisma.VisaDeleteArgs): Promise<PrismaVisa> {
    return this.prisma.visa.delete(args);
  }
}
